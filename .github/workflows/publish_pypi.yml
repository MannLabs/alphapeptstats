on:
  workflow_dispatch:

name: Publish on PyPi 2

jobs:
  Version_Bumped:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.master_version_bumped.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Master version bumped
        id: master_version_bumped
        shell: bash -l {0}
        run: |
          current_version=$(grep "__version__" alphastats/__init__.py | cut -f3 -d ' ' | sed 's/"//g')
          current_version_as_regex=$(echo $current_version | sed 's/\./\\./g')
          conda create -n version_check python=3.8 pip=20.1 -y
          conda activate version_check
          set +e
          already_on_pypi=$(pip install alphastats== 2>&1 | grep -c "$current_version_as_regex")
          set -e
          conda deactivate
          if [ $already_on_pypi -ne 0 ]; then
            echo "Version is already on PyPi"
            exit 1
          fi
          echo ::set-output name=version::$current_version
  Create_PyPi_Release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Write version to file
      run: echo ${{ steps.get_version.outputs.VERSION }} > github_version.txt
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Install package
      run: |
        pip install -e .
    - name: Test if version is valid
      run: |
        pip install pytest
        pytest --runrelease
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}